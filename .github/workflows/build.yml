name: Build Firmware (x86_64-TinyGW)

on:
  push:
    branches: [ x86_64-tiny_gw ]
  pull_request:
    branches: [ x86_64-tiny_gw ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REPO_URL: https://github.com/XUEGAONET/CE # ok
  REPO_BRANCH: x86_64-tiny_gw # ok 
  TZ: Asia/Shanghai # ok

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf wget swig rsync
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Checkout repo
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH repo

    - name: Update feeds
      working-directory: /workdir
      run: cd repo && ./scripts/feeds update -a

    - name: Install feeds
      working-directory: /workdir
      run: cd repo && ./scripts/feeds install -a

    - name: Download package
      working-directory: /workdir
      run: |
        cd repo
        make defconfig
        make download -j8

    - name: Compile
      working-directory: /workdir
      run: |
        cd repo
        echo -e "$(nproc) core detected, all will be used for compiling"
        make -j$(nproc) || make -j1 V=s
        echo "compile success"

    - name: Organize files
      working-directory: /workdir
      run: |
        cd repo/bin/targets/*/*
        tar zcvf packages.tar.gz packages/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}-${{ github.sha }}
        files: ${{ env.FIRMWARE }}/*


