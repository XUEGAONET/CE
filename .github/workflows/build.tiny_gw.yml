name: Build x86_64-TinyGW

on:
#  push:
#    branches: [ main-19.07 ]
  pull_request:
    branches: [ main-19.07 ]
    types: [ closed ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.pull_request.merged == true

    steps:
    - name: Show Info
      run: | 
        echo "::group::free -m"
        sudo free -m
        echo "::endgroup::"
        echo "::group::lscpu"
        sudo lscpu
        echo "::endgroup::"
        echo "::group::df -h"
        sudo df -h
        echo "::endgroup::"

    - name: Create Workdir and Checkout
      run: |
        sudo -E mkdir -p /workdir
        sudo -E chown ${USER}:${GROUPS} /workdir
        cd /workdir
        git clone ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} repo

    - name: Install Build Tools
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf wget swig rsync
        sudo timedatectl set-timezone "${TZ}"

    - name: Update Feeds
      working-directory: /workdir/repo
      run: ./scripts/feeds update -a

    - name: Install Feeds
      working-directory: /workdir/repo
      run: ./scripts/feeds install -a

    - name: Download Package
      working-directory: /workdir/repo
      run: |
        make defconfig
        cp build_config/tiny_gw.config .config -f
        make download -j8

    - name: Compile
      working-directory: /workdir/repo
      run: |
        echo -e "$(nproc) core detected, all will be used for compiling"
        make -j$(nproc) || make -j1 V=s

    - name: Organize Files
      working-directory: /workdir/repo
      run: |
        cd bin/targets/*/*
        tar zcvf packages.tar.gz packages/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Generate Release Message
      working-directory: /workdir/repo
      run: |
        cd bin/targets/*/*
        # combine branch name
        echo ":alien: **Branch:** $(git branch)" > RL.txt
        # combine git version
        echo ":rocket: **Version:** $(cat version.buildinfo)" >> RL.txt
        rm -rf version.buildinfo
        # combine commit message
        echo ":art: **Commit Message:** " >> RL.txt
        echo '```text' >> RL.txt
        echo "$(git log -1 --format=%s)" >> RL.txt
        echo '```' >> RL.txt
        # combine checksum file
        echo ":apple: **Checksum:** " >> RL.txt
        echo '```text' >> RL.txt
        echo "$(cat sha256sums)" >> RL.txt
        echo '```' >> RL.txt
        rm -rf sha256sums
        # combine a blank line
        echo "" >> RL.txt
        # move to top dir
        mv RL.txt ../../../..

    - name: Create Release and Upload
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        files: ${{ env.FIRMWARE }}/*
        body_path: /workdir/repo/RL.txt


